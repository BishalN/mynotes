import type { NextPage } from 'next';
import { useRouter } from 'next/dist/client/router';
import Head from 'next/head';
import Link from 'next/link';
import React, { useState } from 'react';
import { Button } from '../components/Button';
import { Input } from '../components/Input';
import { Spinner } from '../components/Spinner';
import useLogin, { LoginError } from '../hooks/mutation/useLogin';

export type OnChangeEvent = React.ChangeEvent<HTMLInputElement>;
export type InputError = { field: string; message: string };
export type InputErrors = InputError[];

const Home: NextPage = () => {
  const router = useRouter();
  const { mutate, isLoading, data } = useLogin();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errors, setErrors] = useState<InputErrors>([]);

  const loginHandler = () => {
    setErrors([]);
    if (!email || !email.includes('@')) {
      setErrors((prevError) => [
        ...prevError,
        { field: 'email', message: 'Email is required and must be valid' },
      ]);
      return;
    }
    if (!password || password.length < 6) {
      setErrors((prevError) => [
        ...prevError,
        {
          field: 'password',
          message: 'Password is required and must be atleas 6 character long',
        },
      ]);
      return;
    }
    mutate(
      { email, password },
      {
        onError: (errors) => {
          //Check if the data is array or an object
          if (errors.response?.data?.hasOwnProperty('length')) {
            const errs: LoginError[] = errors?.response?.data;
            errs.map((err) => {
              setErrors((prevError) => [
                ...prevError,
                { field: err.field, message: err.message },
              ]);
            });
          } else {
            const err: LoginError = errors.response.data;
            console.log(err);
            setErrors((prevError) => [
              ...prevError,
              { field: err.field, message: err.message },
            ]);
          }
        },
      }
    );
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='container mx-auto'>
        {/* nav section */}
        <section>
          <h1 className='text-5xl m-5'>MyNotes</h1>
        </section>

        {/* by default the index page would be the login page */}
        <main>
          <section>
            <div
              className='bg-gray-200 my-10
             rounded-md  flex flex-col mx-3 p-6
              space-y-4 justify-center items-center md:mx-28 lg:mx-56 xl:mx-96'
            >
              <div className='self-start'>
                <h3 className='text-5xl'>Welcome</h3>
                <h3 className='ml-2'>
                  By logging in you accept our{' '}
                  <span className='text-blue-700 cursor-pointer'>
                    Privacy Policy
                  </span>{' '}
                  and
                  <span className='text-blue-700 cursor-pointer'>
                    {' '}
                    Terms of Service
                  </span>
                  .
                </h3>
              </div>

              <form
                action=''
                className='flex flex-col w-full space-y-2 text-center'
              >
                <Input
                  placeholder='Enter your email address'
                  value={email}
                  onChange={(e: OnChangeEvent) => setEmail(e.target.value)}
                />
                {errors.map(
                  (err) =>
                    err.field == 'email' && (
                      <span className='text-red-600 text-xs '>
                        {err.message}
                      </span>
                    )
                )}
                <Input
                  isPassword
                  placeholder='Enter your password'
                  onChange={(e: OnChangeEvent) => setPassword(e.target.value)}
                />
                {errors.map(
                  (err) =>
                    err.field == 'password' && (
                      <span className='text-red-600 text-xs '>
                        {err.message}
                      </span>
                    )
                )}
                <Button loading={isLoading} onClick={loginHandler}>
                  Login
                </Button>
                <span>
                  Don't have an account?{' '}
                  <span className='text-blue-500'>
                    <Link href='/register'>Register</Link>
                  </span>
                </span>
                <div className='border-b-2 w-64 self-center border-black'></div>
              </form>
              <Button
                onClick={() => {
                  router.push(
                    `${process.env.NEXT_PUBLIC_API_BASE_URL}/auth/facebook`
                  );
                }}
              >
                Continue with facebook
              </Button>
              <Button
                onClick={() => {
                  router.push(
                    `${process.env.NEXT_PUBLIC_API_BASE_URL}/auth/google`
                  );
                }}
              >
                Continue with google
              </Button>
              <Button
                onClick={() => {
                  router.push(
                    `${process.env.NEXT_PUBLIC_API_BASE_URL}/auth/github`
                  );
                }}
              >
                Continue with github
              </Button>
            </div>
          </section>
        </main>
      </div>
    </div>
  );
};

export default Home;
